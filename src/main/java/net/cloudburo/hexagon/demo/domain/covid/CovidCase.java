/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.cloudburo.hexagon.demo.domain.covid;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Information which used to describe covid geographic distribution per region */
@org.apache.avro.specific.AvroGenerated
public class CovidCase extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7951777745138493761L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CovidCase\",\"namespace\":\"net.cloudburo.hexagon.demo.domain.covid\",\"doc\":\"Information which used to describe covid geographic distribution per region\",\"fields\":[{\"name\":\"header\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Header\",\"doc\":\"The header record stores important (meta-) information about the record, certain fields are optional in case an initial creation is done\",\"fields\":[{\"name\":\"avroFingerprint\",\"type\":\"long\",\"doc\":\"The fingerprint of the schema used by record producer, http://avro.apache.org/docs/1.8.2/spec.html#schema_fingerprints.\"},{\"name\":\"lastUpdateLoginId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Login id  who produced the record\",\"default\":null},{\"name\":\"lastUpdateTimestamp\",\"type\":[\"null\",\"long\"],\"doc\":\"The Update timestamp when the record was persisted. Null for the update of a record, will be newly calculated by persistency adpapter\",\"default\":null,\"logical-type\":\"time-micros\"}]}],\"default\":null},{\"name\":\"reportingDate\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"reportingDay\",\"type\":\"int\"},{\"name\":\"reportingMonth\",\"type\":\"int\"},{\"name\":\"reportingYear\",\"type\":\"int\"},{\"name\":\"cases\",\"type\":\"int\"},{\"name\":\"deaths\",\"type\":\"int\"},{\"name\":\"countriesAndTerritories\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"geoId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"countryTerritoryCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"population2019\",\"type\":\"int\"},{\"name\":\"continent\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cumNum14daysPer1000\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CovidCase> ENCODER =
      new BinaryMessageEncoder<CovidCase>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CovidCase> DECODER =
      new BinaryMessageDecoder<CovidCase>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CovidCase> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CovidCase> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CovidCase>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CovidCase to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CovidCase from a ByteBuffer. */
  public static CovidCase fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private net.cloudburo.hexagon.demo.domain.covid.Header header;
   private long reportingDate;
   private int reportingDay;
   private int reportingMonth;
   private int reportingYear;
   private int cases;
   private int deaths;
   private java.lang.String countriesAndTerritories;
   private java.lang.String geoId;
   private java.lang.String countryTerritoryCode;
   private int population2019;
   private java.lang.String continent;
   private float cumNum14daysPer1000;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CovidCase() {}

  /**
   * All-args constructor.
   * @param header The new value for header
   * @param reportingDate The new value for reportingDate
   * @param reportingDay The new value for reportingDay
   * @param reportingMonth The new value for reportingMonth
   * @param reportingYear The new value for reportingYear
   * @param cases The new value for cases
   * @param deaths The new value for deaths
   * @param countriesAndTerritories The new value for countriesAndTerritories
   * @param geoId The new value for geoId
   * @param countryTerritoryCode The new value for countryTerritoryCode
   * @param population2019 The new value for population2019
   * @param continent The new value for continent
   * @param cumNum14daysPer1000 The new value for cumNum14daysPer1000
   */
  public CovidCase(net.cloudburo.hexagon.demo.domain.covid.Header header, java.lang.Long reportingDate, java.lang.Integer reportingDay, java.lang.Integer reportingMonth, java.lang.Integer reportingYear, java.lang.Integer cases, java.lang.Integer deaths, java.lang.String countriesAndTerritories, java.lang.String geoId, java.lang.String countryTerritoryCode, java.lang.Integer population2019, java.lang.String continent, java.lang.Float cumNum14daysPer1000) {
    this.header = header;
    this.reportingDate = reportingDate;
    this.reportingDay = reportingDay;
    this.reportingMonth = reportingMonth;
    this.reportingYear = reportingYear;
    this.cases = cases;
    this.deaths = deaths;
    this.countriesAndTerritories = countriesAndTerritories;
    this.geoId = geoId;
    this.countryTerritoryCode = countryTerritoryCode;
    this.population2019 = population2019;
    this.continent = continent;
    this.cumNum14daysPer1000 = cumNum14daysPer1000;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return header;
    case 1: return reportingDate;
    case 2: return reportingDay;
    case 3: return reportingMonth;
    case 4: return reportingYear;
    case 5: return cases;
    case 6: return deaths;
    case 7: return countriesAndTerritories;
    case 8: return geoId;
    case 9: return countryTerritoryCode;
    case 10: return population2019;
    case 11: return continent;
    case 12: return cumNum14daysPer1000;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: header = (net.cloudburo.hexagon.demo.domain.covid.Header)value$; break;
    case 1: reportingDate = (java.lang.Long)value$; break;
    case 2: reportingDay = (java.lang.Integer)value$; break;
    case 3: reportingMonth = (java.lang.Integer)value$; break;
    case 4: reportingYear = (java.lang.Integer)value$; break;
    case 5: cases = (java.lang.Integer)value$; break;
    case 6: deaths = (java.lang.Integer)value$; break;
    case 7: countriesAndTerritories = (java.lang.String)value$; break;
    case 8: geoId = (java.lang.String)value$; break;
    case 9: countryTerritoryCode = (java.lang.String)value$; break;
    case 10: population2019 = (java.lang.Integer)value$; break;
    case 11: continent = (java.lang.String)value$; break;
    case 12: cumNum14daysPer1000 = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'header' field.
   * @return The value of the 'header' field.
   */
  public net.cloudburo.hexagon.demo.domain.covid.Header getHeader() {
    return header;
  }


  /**
   * Gets the value of the 'reportingDate' field.
   * @return The value of the 'reportingDate' field.
   */
  public java.lang.Long getReportingDate() {
    return reportingDate;
  }


  /**
   * Gets the value of the 'reportingDay' field.
   * @return The value of the 'reportingDay' field.
   */
  public java.lang.Integer getReportingDay() {
    return reportingDay;
  }


  /**
   * Gets the value of the 'reportingMonth' field.
   * @return The value of the 'reportingMonth' field.
   */
  public java.lang.Integer getReportingMonth() {
    return reportingMonth;
  }


  /**
   * Gets the value of the 'reportingYear' field.
   * @return The value of the 'reportingYear' field.
   */
  public java.lang.Integer getReportingYear() {
    return reportingYear;
  }


  /**
   * Gets the value of the 'cases' field.
   * @return The value of the 'cases' field.
   */
  public java.lang.Integer getCases() {
    return cases;
  }


  /**
   * Gets the value of the 'deaths' field.
   * @return The value of the 'deaths' field.
   */
  public java.lang.Integer getDeaths() {
    return deaths;
  }


  /**
   * Gets the value of the 'countriesAndTerritories' field.
   * @return The value of the 'countriesAndTerritories' field.
   */
  public java.lang.String getCountriesAndTerritories() {
    return countriesAndTerritories;
  }


  /**
   * Gets the value of the 'geoId' field.
   * @return The value of the 'geoId' field.
   */
  public java.lang.String getGeoId() {
    return geoId;
  }


  /**
   * Gets the value of the 'countryTerritoryCode' field.
   * @return The value of the 'countryTerritoryCode' field.
   */
  public java.lang.String getCountryTerritoryCode() {
    return countryTerritoryCode;
  }


  /**
   * Gets the value of the 'population2019' field.
   * @return The value of the 'population2019' field.
   */
  public java.lang.Integer getPopulation2019() {
    return population2019;
  }


  /**
   * Gets the value of the 'continent' field.
   * @return The value of the 'continent' field.
   */
  public java.lang.String getContinent() {
    return continent;
  }


  /**
   * Gets the value of the 'cumNum14daysPer1000' field.
   * @return The value of the 'cumNum14daysPer1000' field.
   */
  public java.lang.Float getCumNum14daysPer1000() {
    return cumNum14daysPer1000;
  }


  /**
   * Creates a new CovidCase RecordBuilder.
   * @return A new CovidCase RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder newBuilder() {
    return new net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder();
  }

  /**
   * Creates a new CovidCase RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CovidCase RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder newBuilder(net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder other) {
    return new net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder(other);
  }

  /**
   * Creates a new CovidCase RecordBuilder by copying an existing CovidCase instance.
   * @param other The existing instance to copy.
   * @return A new CovidCase RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder newBuilder(net.cloudburo.hexagon.demo.domain.covid.CovidCase other) {
    return new net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder(other);
  }

  /**
   * RecordBuilder for CovidCase instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CovidCase>
    implements org.apache.avro.data.RecordBuilder<CovidCase> {

    private net.cloudburo.hexagon.demo.domain.covid.Header header;
    private net.cloudburo.hexagon.demo.domain.covid.Header.Builder headerBuilder;
    private long reportingDate;
    private int reportingDay;
    private int reportingMonth;
    private int reportingYear;
    private int cases;
    private int deaths;
    private java.lang.String countriesAndTerritories;
    private java.lang.String geoId;
    private java.lang.String countryTerritoryCode;
    private int population2019;
    private java.lang.String continent;
    private float cumNum14daysPer1000;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      if (other.hasHeaderBuilder()) {
        this.headerBuilder = net.cloudburo.hexagon.demo.domain.covid.Header.newBuilder(other.getHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.reportingDate)) {
        this.reportingDate = data().deepCopy(fields()[1].schema(), other.reportingDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.reportingDay)) {
        this.reportingDay = data().deepCopy(fields()[2].schema(), other.reportingDay);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.reportingMonth)) {
        this.reportingMonth = data().deepCopy(fields()[3].schema(), other.reportingMonth);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reportingYear)) {
        this.reportingYear = data().deepCopy(fields()[4].schema(), other.reportingYear);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cases)) {
        this.cases = data().deepCopy(fields()[5].schema(), other.cases);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.deaths)) {
        this.deaths = data().deepCopy(fields()[6].schema(), other.deaths);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.countriesAndTerritories)) {
        this.countriesAndTerritories = data().deepCopy(fields()[7].schema(), other.countriesAndTerritories);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.geoId)) {
        this.geoId = data().deepCopy(fields()[8].schema(), other.geoId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.countryTerritoryCode)) {
        this.countryTerritoryCode = data().deepCopy(fields()[9].schema(), other.countryTerritoryCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.population2019)) {
        this.population2019 = data().deepCopy(fields()[10].schema(), other.population2019);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.continent)) {
        this.continent = data().deepCopy(fields()[11].schema(), other.continent);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.cumNum14daysPer1000)) {
        this.cumNum14daysPer1000 = data().deepCopy(fields()[12].schema(), other.cumNum14daysPer1000);
        fieldSetFlags()[12] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CovidCase instance
     * @param other The existing instance to copy.
     */
    private Builder(net.cloudburo.hexagon.demo.domain.covid.CovidCase other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      this.headerBuilder = null;
      if (isValidValue(fields()[1], other.reportingDate)) {
        this.reportingDate = data().deepCopy(fields()[1].schema(), other.reportingDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.reportingDay)) {
        this.reportingDay = data().deepCopy(fields()[2].schema(), other.reportingDay);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.reportingMonth)) {
        this.reportingMonth = data().deepCopy(fields()[3].schema(), other.reportingMonth);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reportingYear)) {
        this.reportingYear = data().deepCopy(fields()[4].schema(), other.reportingYear);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cases)) {
        this.cases = data().deepCopy(fields()[5].schema(), other.cases);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.deaths)) {
        this.deaths = data().deepCopy(fields()[6].schema(), other.deaths);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.countriesAndTerritories)) {
        this.countriesAndTerritories = data().deepCopy(fields()[7].schema(), other.countriesAndTerritories);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.geoId)) {
        this.geoId = data().deepCopy(fields()[8].schema(), other.geoId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.countryTerritoryCode)) {
        this.countryTerritoryCode = data().deepCopy(fields()[9].schema(), other.countryTerritoryCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.population2019)) {
        this.population2019 = data().deepCopy(fields()[10].schema(), other.population2019);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.continent)) {
        this.continent = data().deepCopy(fields()[11].schema(), other.continent);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.cumNum14daysPer1000)) {
        this.cumNum14daysPer1000 = data().deepCopy(fields()[12].schema(), other.cumNum14daysPer1000);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'header' field.
      * @return The value.
      */
    public net.cloudburo.hexagon.demo.domain.covid.Header getHeader() {
      return header;
    }

    /**
      * Sets the value of the 'header' field.
      * @param value The value of 'header'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setHeader(net.cloudburo.hexagon.demo.domain.covid.Header value) {
      validate(fields()[0], value);
      this.headerBuilder = null;
      this.header = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'header' field has been set.
      * @return True if the 'header' field has been set, false otherwise.
      */
    public boolean hasHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'header' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public net.cloudburo.hexagon.demo.domain.covid.Header.Builder getHeaderBuilder() {
      if (headerBuilder == null) {
        if (hasHeader()) {
          setHeaderBuilder(net.cloudburo.hexagon.demo.domain.covid.Header.newBuilder(header));
        } else {
          setHeaderBuilder(net.cloudburo.hexagon.demo.domain.covid.Header.newBuilder());
        }
      }
      return headerBuilder;
    }

    /**
     * Sets the Builder instance for the 'header' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setHeaderBuilder(net.cloudburo.hexagon.demo.domain.covid.Header.Builder value) {
      clearHeader();
      headerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'header' field has an active Builder instance
     * @return True if the 'header' field has an active Builder instance
     */
    public boolean hasHeaderBuilder() {
      return headerBuilder != null;
    }

    /**
      * Clears the value of the 'header' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearHeader() {
      header = null;
      headerBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'reportingDate' field.
      * @return The value.
      */
    public java.lang.Long getReportingDate() {
      return reportingDate;
    }

    /**
      * Sets the value of the 'reportingDate' field.
      * @param value The value of 'reportingDate'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setReportingDate(long value) {
      validate(fields()[1], value);
      this.reportingDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'reportingDate' field has been set.
      * @return True if the 'reportingDate' field has been set, false otherwise.
      */
    public boolean hasReportingDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'reportingDate' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearReportingDate() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'reportingDay' field.
      * @return The value.
      */
    public java.lang.Integer getReportingDay() {
      return reportingDay;
    }

    /**
      * Sets the value of the 'reportingDay' field.
      * @param value The value of 'reportingDay'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setReportingDay(int value) {
      validate(fields()[2], value);
      this.reportingDay = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'reportingDay' field has been set.
      * @return True if the 'reportingDay' field has been set, false otherwise.
      */
    public boolean hasReportingDay() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'reportingDay' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearReportingDay() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'reportingMonth' field.
      * @return The value.
      */
    public java.lang.Integer getReportingMonth() {
      return reportingMonth;
    }

    /**
      * Sets the value of the 'reportingMonth' field.
      * @param value The value of 'reportingMonth'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setReportingMonth(int value) {
      validate(fields()[3], value);
      this.reportingMonth = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'reportingMonth' field has been set.
      * @return True if the 'reportingMonth' field has been set, false otherwise.
      */
    public boolean hasReportingMonth() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'reportingMonth' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearReportingMonth() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'reportingYear' field.
      * @return The value.
      */
    public java.lang.Integer getReportingYear() {
      return reportingYear;
    }

    /**
      * Sets the value of the 'reportingYear' field.
      * @param value The value of 'reportingYear'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setReportingYear(int value) {
      validate(fields()[4], value);
      this.reportingYear = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'reportingYear' field has been set.
      * @return True if the 'reportingYear' field has been set, false otherwise.
      */
    public boolean hasReportingYear() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'reportingYear' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearReportingYear() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'cases' field.
      * @return The value.
      */
    public java.lang.Integer getCases() {
      return cases;
    }

    /**
      * Sets the value of the 'cases' field.
      * @param value The value of 'cases'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setCases(int value) {
      validate(fields()[5], value);
      this.cases = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'cases' field has been set.
      * @return True if the 'cases' field has been set, false otherwise.
      */
    public boolean hasCases() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'cases' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearCases() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'deaths' field.
      * @return The value.
      */
    public java.lang.Integer getDeaths() {
      return deaths;
    }

    /**
      * Sets the value of the 'deaths' field.
      * @param value The value of 'deaths'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setDeaths(int value) {
      validate(fields()[6], value);
      this.deaths = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'deaths' field has been set.
      * @return True if the 'deaths' field has been set, false otherwise.
      */
    public boolean hasDeaths() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'deaths' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearDeaths() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'countriesAndTerritories' field.
      * @return The value.
      */
    public java.lang.String getCountriesAndTerritories() {
      return countriesAndTerritories;
    }

    /**
      * Sets the value of the 'countriesAndTerritories' field.
      * @param value The value of 'countriesAndTerritories'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setCountriesAndTerritories(java.lang.String value) {
      validate(fields()[7], value);
      this.countriesAndTerritories = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'countriesAndTerritories' field has been set.
      * @return True if the 'countriesAndTerritories' field has been set, false otherwise.
      */
    public boolean hasCountriesAndTerritories() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'countriesAndTerritories' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearCountriesAndTerritories() {
      countriesAndTerritories = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'geoId' field.
      * @return The value.
      */
    public java.lang.String getGeoId() {
      return geoId;
    }

    /**
      * Sets the value of the 'geoId' field.
      * @param value The value of 'geoId'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setGeoId(java.lang.String value) {
      validate(fields()[8], value);
      this.geoId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'geoId' field has been set.
      * @return True if the 'geoId' field has been set, false otherwise.
      */
    public boolean hasGeoId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'geoId' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearGeoId() {
      geoId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryTerritoryCode' field.
      * @return The value.
      */
    public java.lang.String getCountryTerritoryCode() {
      return countryTerritoryCode;
    }

    /**
      * Sets the value of the 'countryTerritoryCode' field.
      * @param value The value of 'countryTerritoryCode'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setCountryTerritoryCode(java.lang.String value) {
      validate(fields()[9], value);
      this.countryTerritoryCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'countryTerritoryCode' field has been set.
      * @return True if the 'countryTerritoryCode' field has been set, false otherwise.
      */
    public boolean hasCountryTerritoryCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'countryTerritoryCode' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearCountryTerritoryCode() {
      countryTerritoryCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'population2019' field.
      * @return The value.
      */
    public java.lang.Integer getPopulation2019() {
      return population2019;
    }

    /**
      * Sets the value of the 'population2019' field.
      * @param value The value of 'population2019'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setPopulation2019(int value) {
      validate(fields()[10], value);
      this.population2019 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'population2019' field has been set.
      * @return True if the 'population2019' field has been set, false otherwise.
      */
    public boolean hasPopulation2019() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'population2019' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearPopulation2019() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'continent' field.
      * @return The value.
      */
    public java.lang.String getContinent() {
      return continent;
    }

    /**
      * Sets the value of the 'continent' field.
      * @param value The value of 'continent'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setContinent(java.lang.String value) {
      validate(fields()[11], value);
      this.continent = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'continent' field has been set.
      * @return True if the 'continent' field has been set, false otherwise.
      */
    public boolean hasContinent() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'continent' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearContinent() {
      continent = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'cumNum14daysPer1000' field.
      * @return The value.
      */
    public java.lang.Float getCumNum14daysPer1000() {
      return cumNum14daysPer1000;
    }

    /**
      * Sets the value of the 'cumNum14daysPer1000' field.
      * @param value The value of 'cumNum14daysPer1000'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder setCumNum14daysPer1000(float value) {
      validate(fields()[12], value);
      this.cumNum14daysPer1000 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'cumNum14daysPer1000' field has been set.
      * @return True if the 'cumNum14daysPer1000' field has been set, false otherwise.
      */
    public boolean hasCumNum14daysPer1000() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'cumNum14daysPer1000' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCase.Builder clearCumNum14daysPer1000() {
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CovidCase build() {
      try {
        CovidCase record = new CovidCase();
        if (headerBuilder != null) {
          record.header = this.headerBuilder.build();
        } else {
          record.header = fieldSetFlags()[0] ? this.header : (net.cloudburo.hexagon.demo.domain.covid.Header) defaultValue(fields()[0]);
        }
        record.reportingDate = fieldSetFlags()[1] ? this.reportingDate : (java.lang.Long) defaultValue(fields()[1]);
        record.reportingDay = fieldSetFlags()[2] ? this.reportingDay : (java.lang.Integer) defaultValue(fields()[2]);
        record.reportingMonth = fieldSetFlags()[3] ? this.reportingMonth : (java.lang.Integer) defaultValue(fields()[3]);
        record.reportingYear = fieldSetFlags()[4] ? this.reportingYear : (java.lang.Integer) defaultValue(fields()[4]);
        record.cases = fieldSetFlags()[5] ? this.cases : (java.lang.Integer) defaultValue(fields()[5]);
        record.deaths = fieldSetFlags()[6] ? this.deaths : (java.lang.Integer) defaultValue(fields()[6]);
        record.countriesAndTerritories = fieldSetFlags()[7] ? this.countriesAndTerritories : (java.lang.String) defaultValue(fields()[7]);
        record.geoId = fieldSetFlags()[8] ? this.geoId : (java.lang.String) defaultValue(fields()[8]);
        record.countryTerritoryCode = fieldSetFlags()[9] ? this.countryTerritoryCode : (java.lang.String) defaultValue(fields()[9]);
        record.population2019 = fieldSetFlags()[10] ? this.population2019 : (java.lang.Integer) defaultValue(fields()[10]);
        record.continent = fieldSetFlags()[11] ? this.continent : (java.lang.String) defaultValue(fields()[11]);
        record.cumNum14daysPer1000 = fieldSetFlags()[12] ? this.cumNum14daysPer1000 : (java.lang.Float) defaultValue(fields()[12]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CovidCase>
    WRITER$ = (org.apache.avro.io.DatumWriter<CovidCase>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CovidCase>
    READER$ = (org.apache.avro.io.DatumReader<CovidCase>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
