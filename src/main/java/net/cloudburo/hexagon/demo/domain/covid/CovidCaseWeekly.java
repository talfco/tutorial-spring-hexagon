/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.cloudburo.hexagon.demo.domain.covid;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Information which used to describe covid geographic distribution per region on a weekly base */
@org.apache.avro.specific.AvroGenerated
public class CovidCaseWeekly extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2888709266036024310L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CovidCaseWeekly\",\"namespace\":\"net.cloudburo.hexagon.demo.domain.covid\",\"doc\":\"Information which used to describe covid geographic distribution per region on a weekly base\",\"fields\":[{\"name\":\"header\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Header\",\"doc\":\"The header record stores important (meta-) information about the record, certain fields are optional in case an initial creation is done\",\"fields\":[{\"name\":\"avroFingerprint\",\"type\":\"long\",\"doc\":\"The fingerprint of the schema used by record producer, http://avro.apache.org/docs/1.8.2/spec.html#schema_fingerprints.\"},{\"name\":\"lastUpdateLoginId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Login id  who produced the record\",\"default\":null},{\"name\":\"lastUpdateTimestamp\",\"type\":[\"null\",\"long\"],\"doc\":\"The Update timestamp when the record was persisted. Null for the update of a record, will be newly calculated by persistency adpapter\",\"default\":null,\"logical-type\":\"time-micros\"}]}],\"default\":null},{\"name\":\"reportingWeek\",\"type\":\"int\"},{\"name\":\"reportingYear\",\"type\":\"int\"},{\"name\":\"countriesAndTerritories\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"countryCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"continent\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"indicator\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"weeklyCount\",\"type\":\"long\"},{\"name\":\"cumulativeCount\",\"type\":\"long\"},{\"name\":\"source\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"population2019\",\"type\":\"int\"},{\"name\":\"cumNum14daysPer1000\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CovidCaseWeekly> ENCODER =
      new BinaryMessageEncoder<CovidCaseWeekly>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CovidCaseWeekly> DECODER =
      new BinaryMessageDecoder<CovidCaseWeekly>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CovidCaseWeekly> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CovidCaseWeekly> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CovidCaseWeekly>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CovidCaseWeekly to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CovidCaseWeekly from a ByteBuffer. */
  public static CovidCaseWeekly fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private net.cloudburo.hexagon.demo.domain.covid.Header header;
   private int reportingWeek;
   private int reportingYear;
   private java.lang.String countriesAndTerritories;
   private java.lang.String countryCode;
   private java.lang.String continent;
   private java.lang.String indicator;
   private long weeklyCount;
   private long cumulativeCount;
   private java.lang.String source;
   private int population2019;
   private float cumNum14daysPer1000;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CovidCaseWeekly() {}

  /**
   * All-args constructor.
   * @param header The new value for header
   * @param reportingWeek The new value for reportingWeek
   * @param reportingYear The new value for reportingYear
   * @param countriesAndTerritories The new value for countriesAndTerritories
   * @param countryCode The new value for countryCode
   * @param continent The new value for continent
   * @param indicator The new value for indicator
   * @param weeklyCount The new value for weeklyCount
   * @param cumulativeCount The new value for cumulativeCount
   * @param source The new value for source
   * @param population2019 The new value for population2019
   * @param cumNum14daysPer1000 The new value for cumNum14daysPer1000
   */
  public CovidCaseWeekly(net.cloudburo.hexagon.demo.domain.covid.Header header, java.lang.Integer reportingWeek, java.lang.Integer reportingYear, java.lang.String countriesAndTerritories, java.lang.String countryCode, java.lang.String continent, java.lang.String indicator, java.lang.Long weeklyCount, java.lang.Long cumulativeCount, java.lang.String source, java.lang.Integer population2019, java.lang.Float cumNum14daysPer1000) {
    this.header = header;
    this.reportingWeek = reportingWeek;
    this.reportingYear = reportingYear;
    this.countriesAndTerritories = countriesAndTerritories;
    this.countryCode = countryCode;
    this.continent = continent;
    this.indicator = indicator;
    this.weeklyCount = weeklyCount;
    this.cumulativeCount = cumulativeCount;
    this.source = source;
    this.population2019 = population2019;
    this.cumNum14daysPer1000 = cumNum14daysPer1000;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return header;
    case 1: return reportingWeek;
    case 2: return reportingYear;
    case 3: return countriesAndTerritories;
    case 4: return countryCode;
    case 5: return continent;
    case 6: return indicator;
    case 7: return weeklyCount;
    case 8: return cumulativeCount;
    case 9: return source;
    case 10: return population2019;
    case 11: return cumNum14daysPer1000;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: header = (net.cloudburo.hexagon.demo.domain.covid.Header)value$; break;
    case 1: reportingWeek = (java.lang.Integer)value$; break;
    case 2: reportingYear = (java.lang.Integer)value$; break;
    case 3: countriesAndTerritories = (java.lang.String)value$; break;
    case 4: countryCode = (java.lang.String)value$; break;
    case 5: continent = (java.lang.String)value$; break;
    case 6: indicator = (java.lang.String)value$; break;
    case 7: weeklyCount = (java.lang.Long)value$; break;
    case 8: cumulativeCount = (java.lang.Long)value$; break;
    case 9: source = (java.lang.String)value$; break;
    case 10: population2019 = (java.lang.Integer)value$; break;
    case 11: cumNum14daysPer1000 = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'header' field.
   * @return The value of the 'header' field.
   */
  public net.cloudburo.hexagon.demo.domain.covid.Header getHeader() {
    return header;
  }


  /**
   * Gets the value of the 'reportingWeek' field.
   * @return The value of the 'reportingWeek' field.
   */
  public java.lang.Integer getReportingWeek() {
    return reportingWeek;
  }


  /**
   * Gets the value of the 'reportingYear' field.
   * @return The value of the 'reportingYear' field.
   */
  public java.lang.Integer getReportingYear() {
    return reportingYear;
  }


  /**
   * Gets the value of the 'countriesAndTerritories' field.
   * @return The value of the 'countriesAndTerritories' field.
   */
  public java.lang.String getCountriesAndTerritories() {
    return countriesAndTerritories;
  }


  /**
   * Gets the value of the 'countryCode' field.
   * @return The value of the 'countryCode' field.
   */
  public java.lang.String getCountryCode() {
    return countryCode;
  }


  /**
   * Gets the value of the 'continent' field.
   * @return The value of the 'continent' field.
   */
  public java.lang.String getContinent() {
    return continent;
  }


  /**
   * Gets the value of the 'indicator' field.
   * @return The value of the 'indicator' field.
   */
  public java.lang.String getIndicator() {
    return indicator;
  }


  /**
   * Gets the value of the 'weeklyCount' field.
   * @return The value of the 'weeklyCount' field.
   */
  public java.lang.Long getWeeklyCount() {
    return weeklyCount;
  }


  /**
   * Gets the value of the 'cumulativeCount' field.
   * @return The value of the 'cumulativeCount' field.
   */
  public java.lang.Long getCumulativeCount() {
    return cumulativeCount;
  }


  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.String getSource() {
    return source;
  }


  /**
   * Gets the value of the 'population2019' field.
   * @return The value of the 'population2019' field.
   */
  public java.lang.Integer getPopulation2019() {
    return population2019;
  }


  /**
   * Gets the value of the 'cumNum14daysPer1000' field.
   * @return The value of the 'cumNum14daysPer1000' field.
   */
  public java.lang.Float getCumNum14daysPer1000() {
    return cumNum14daysPer1000;
  }


  /**
   * Creates a new CovidCaseWeekly RecordBuilder.
   * @return A new CovidCaseWeekly RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder newBuilder() {
    return new net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder();
  }

  /**
   * Creates a new CovidCaseWeekly RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CovidCaseWeekly RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder newBuilder(net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder other) {
    return new net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder(other);
  }

  /**
   * Creates a new CovidCaseWeekly RecordBuilder by copying an existing CovidCaseWeekly instance.
   * @param other The existing instance to copy.
   * @return A new CovidCaseWeekly RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder newBuilder(net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly other) {
    return new net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder(other);
  }

  /**
   * RecordBuilder for CovidCaseWeekly instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CovidCaseWeekly>
    implements org.apache.avro.data.RecordBuilder<CovidCaseWeekly> {

    private net.cloudburo.hexagon.demo.domain.covid.Header header;
    private net.cloudburo.hexagon.demo.domain.covid.Header.Builder headerBuilder;
    private int reportingWeek;
    private int reportingYear;
    private java.lang.String countriesAndTerritories;
    private java.lang.String countryCode;
    private java.lang.String continent;
    private java.lang.String indicator;
    private long weeklyCount;
    private long cumulativeCount;
    private java.lang.String source;
    private int population2019;
    private float cumNum14daysPer1000;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      if (other.hasHeaderBuilder()) {
        this.headerBuilder = net.cloudburo.hexagon.demo.domain.covid.Header.newBuilder(other.getHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.reportingWeek)) {
        this.reportingWeek = data().deepCopy(fields()[1].schema(), other.reportingWeek);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.reportingYear)) {
        this.reportingYear = data().deepCopy(fields()[2].schema(), other.reportingYear);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.countriesAndTerritories)) {
        this.countriesAndTerritories = data().deepCopy(fields()[3].schema(), other.countriesAndTerritories);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[4].schema(), other.countryCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.continent)) {
        this.continent = data().deepCopy(fields()[5].schema(), other.continent);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.indicator)) {
        this.indicator = data().deepCopy(fields()[6].schema(), other.indicator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.weeklyCount)) {
        this.weeklyCount = data().deepCopy(fields()[7].schema(), other.weeklyCount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.cumulativeCount)) {
        this.cumulativeCount = data().deepCopy(fields()[8].schema(), other.cumulativeCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.source)) {
        this.source = data().deepCopy(fields()[9].schema(), other.source);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.population2019)) {
        this.population2019 = data().deepCopy(fields()[10].schema(), other.population2019);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.cumNum14daysPer1000)) {
        this.cumNum14daysPer1000 = data().deepCopy(fields()[11].schema(), other.cumNum14daysPer1000);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CovidCaseWeekly instance
     * @param other The existing instance to copy.
     */
    private Builder(net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.header)) {
        this.header = data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      this.headerBuilder = null;
      if (isValidValue(fields()[1], other.reportingWeek)) {
        this.reportingWeek = data().deepCopy(fields()[1].schema(), other.reportingWeek);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.reportingYear)) {
        this.reportingYear = data().deepCopy(fields()[2].schema(), other.reportingYear);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.countriesAndTerritories)) {
        this.countriesAndTerritories = data().deepCopy(fields()[3].schema(), other.countriesAndTerritories);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[4].schema(), other.countryCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.continent)) {
        this.continent = data().deepCopy(fields()[5].schema(), other.continent);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.indicator)) {
        this.indicator = data().deepCopy(fields()[6].schema(), other.indicator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.weeklyCount)) {
        this.weeklyCount = data().deepCopy(fields()[7].schema(), other.weeklyCount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.cumulativeCount)) {
        this.cumulativeCount = data().deepCopy(fields()[8].schema(), other.cumulativeCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.source)) {
        this.source = data().deepCopy(fields()[9].schema(), other.source);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.population2019)) {
        this.population2019 = data().deepCopy(fields()[10].schema(), other.population2019);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.cumNum14daysPer1000)) {
        this.cumNum14daysPer1000 = data().deepCopy(fields()[11].schema(), other.cumNum14daysPer1000);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'header' field.
      * @return The value.
      */
    public net.cloudburo.hexagon.demo.domain.covid.Header getHeader() {
      return header;
    }

    /**
      * Sets the value of the 'header' field.
      * @param value The value of 'header'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setHeader(net.cloudburo.hexagon.demo.domain.covid.Header value) {
      validate(fields()[0], value);
      this.headerBuilder = null;
      this.header = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'header' field has been set.
      * @return True if the 'header' field has been set, false otherwise.
      */
    public boolean hasHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'header' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public net.cloudburo.hexagon.demo.domain.covid.Header.Builder getHeaderBuilder() {
      if (headerBuilder == null) {
        if (hasHeader()) {
          setHeaderBuilder(net.cloudburo.hexagon.demo.domain.covid.Header.newBuilder(header));
        } else {
          setHeaderBuilder(net.cloudburo.hexagon.demo.domain.covid.Header.newBuilder());
        }
      }
      return headerBuilder;
    }

    /**
     * Sets the Builder instance for the 'header' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setHeaderBuilder(net.cloudburo.hexagon.demo.domain.covid.Header.Builder value) {
      clearHeader();
      headerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'header' field has an active Builder instance
     * @return True if the 'header' field has an active Builder instance
     */
    public boolean hasHeaderBuilder() {
      return headerBuilder != null;
    }

    /**
      * Clears the value of the 'header' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearHeader() {
      header = null;
      headerBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'reportingWeek' field.
      * @return The value.
      */
    public java.lang.Integer getReportingWeek() {
      return reportingWeek;
    }

    /**
      * Sets the value of the 'reportingWeek' field.
      * @param value The value of 'reportingWeek'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setReportingWeek(int value) {
      validate(fields()[1], value);
      this.reportingWeek = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'reportingWeek' field has been set.
      * @return True if the 'reportingWeek' field has been set, false otherwise.
      */
    public boolean hasReportingWeek() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'reportingWeek' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearReportingWeek() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'reportingYear' field.
      * @return The value.
      */
    public java.lang.Integer getReportingYear() {
      return reportingYear;
    }

    /**
      * Sets the value of the 'reportingYear' field.
      * @param value The value of 'reportingYear'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setReportingYear(int value) {
      validate(fields()[2], value);
      this.reportingYear = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'reportingYear' field has been set.
      * @return True if the 'reportingYear' field has been set, false otherwise.
      */
    public boolean hasReportingYear() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'reportingYear' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearReportingYear() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'countriesAndTerritories' field.
      * @return The value.
      */
    public java.lang.String getCountriesAndTerritories() {
      return countriesAndTerritories;
    }

    /**
      * Sets the value of the 'countriesAndTerritories' field.
      * @param value The value of 'countriesAndTerritories'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setCountriesAndTerritories(java.lang.String value) {
      validate(fields()[3], value);
      this.countriesAndTerritories = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'countriesAndTerritories' field has been set.
      * @return True if the 'countriesAndTerritories' field has been set, false otherwise.
      */
    public boolean hasCountriesAndTerritories() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'countriesAndTerritories' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearCountriesAndTerritories() {
      countriesAndTerritories = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryCode' field.
      * @return The value.
      */
    public java.lang.String getCountryCode() {
      return countryCode;
    }

    /**
      * Sets the value of the 'countryCode' field.
      * @param value The value of 'countryCode'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setCountryCode(java.lang.String value) {
      validate(fields()[4], value);
      this.countryCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'countryCode' field has been set.
      * @return True if the 'countryCode' field has been set, false otherwise.
      */
    public boolean hasCountryCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'countryCode' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'continent' field.
      * @return The value.
      */
    public java.lang.String getContinent() {
      return continent;
    }

    /**
      * Sets the value of the 'continent' field.
      * @param value The value of 'continent'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setContinent(java.lang.String value) {
      validate(fields()[5], value);
      this.continent = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'continent' field has been set.
      * @return True if the 'continent' field has been set, false otherwise.
      */
    public boolean hasContinent() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'continent' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearContinent() {
      continent = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'indicator' field.
      * @return The value.
      */
    public java.lang.String getIndicator() {
      return indicator;
    }

    /**
      * Sets the value of the 'indicator' field.
      * @param value The value of 'indicator'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setIndicator(java.lang.String value) {
      validate(fields()[6], value);
      this.indicator = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'indicator' field has been set.
      * @return True if the 'indicator' field has been set, false otherwise.
      */
    public boolean hasIndicator() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'indicator' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearIndicator() {
      indicator = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'weeklyCount' field.
      * @return The value.
      */
    public java.lang.Long getWeeklyCount() {
      return weeklyCount;
    }

    /**
      * Sets the value of the 'weeklyCount' field.
      * @param value The value of 'weeklyCount'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setWeeklyCount(long value) {
      validate(fields()[7], value);
      this.weeklyCount = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'weeklyCount' field has been set.
      * @return True if the 'weeklyCount' field has been set, false otherwise.
      */
    public boolean hasWeeklyCount() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'weeklyCount' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearWeeklyCount() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'cumulativeCount' field.
      * @return The value.
      */
    public java.lang.Long getCumulativeCount() {
      return cumulativeCount;
    }

    /**
      * Sets the value of the 'cumulativeCount' field.
      * @param value The value of 'cumulativeCount'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setCumulativeCount(long value) {
      validate(fields()[8], value);
      this.cumulativeCount = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'cumulativeCount' field has been set.
      * @return True if the 'cumulativeCount' field has been set, false otherwise.
      */
    public boolean hasCumulativeCount() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'cumulativeCount' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearCumulativeCount() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.String getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setSource(java.lang.String value) {
      validate(fields()[9], value);
      this.source = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearSource() {
      source = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'population2019' field.
      * @return The value.
      */
    public java.lang.Integer getPopulation2019() {
      return population2019;
    }

    /**
      * Sets the value of the 'population2019' field.
      * @param value The value of 'population2019'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setPopulation2019(int value) {
      validate(fields()[10], value);
      this.population2019 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'population2019' field has been set.
      * @return True if the 'population2019' field has been set, false otherwise.
      */
    public boolean hasPopulation2019() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'population2019' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearPopulation2019() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'cumNum14daysPer1000' field.
      * @return The value.
      */
    public java.lang.Float getCumNum14daysPer1000() {
      return cumNum14daysPer1000;
    }

    /**
      * Sets the value of the 'cumNum14daysPer1000' field.
      * @param value The value of 'cumNum14daysPer1000'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder setCumNum14daysPer1000(float value) {
      validate(fields()[11], value);
      this.cumNum14daysPer1000 = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'cumNum14daysPer1000' field has been set.
      * @return True if the 'cumNum14daysPer1000' field has been set, false otherwise.
      */
    public boolean hasCumNum14daysPer1000() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'cumNum14daysPer1000' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.covid.CovidCaseWeekly.Builder clearCumNum14daysPer1000() {
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CovidCaseWeekly build() {
      try {
        CovidCaseWeekly record = new CovidCaseWeekly();
        if (headerBuilder != null) {
          record.header = this.headerBuilder.build();
        } else {
          record.header = fieldSetFlags()[0] ? this.header : (net.cloudburo.hexagon.demo.domain.covid.Header) defaultValue(fields()[0]);
        }
        record.reportingWeek = fieldSetFlags()[1] ? this.reportingWeek : (java.lang.Integer) defaultValue(fields()[1]);
        record.reportingYear = fieldSetFlags()[2] ? this.reportingYear : (java.lang.Integer) defaultValue(fields()[2]);
        record.countriesAndTerritories = fieldSetFlags()[3] ? this.countriesAndTerritories : (java.lang.String) defaultValue(fields()[3]);
        record.countryCode = fieldSetFlags()[4] ? this.countryCode : (java.lang.String) defaultValue(fields()[4]);
        record.continent = fieldSetFlags()[5] ? this.continent : (java.lang.String) defaultValue(fields()[5]);
        record.indicator = fieldSetFlags()[6] ? this.indicator : (java.lang.String) defaultValue(fields()[6]);
        record.weeklyCount = fieldSetFlags()[7] ? this.weeklyCount : (java.lang.Long) defaultValue(fields()[7]);
        record.cumulativeCount = fieldSetFlags()[8] ? this.cumulativeCount : (java.lang.Long) defaultValue(fields()[8]);
        record.source = fieldSetFlags()[9] ? this.source : (java.lang.String) defaultValue(fields()[9]);
        record.population2019 = fieldSetFlags()[10] ? this.population2019 : (java.lang.Integer) defaultValue(fields()[10]);
        record.cumNum14daysPer1000 = fieldSetFlags()[11] ? this.cumNum14daysPer1000 : (java.lang.Float) defaultValue(fields()[11]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CovidCaseWeekly>
    WRITER$ = (org.apache.avro.io.DatumWriter<CovidCaseWeekly>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CovidCaseWeekly>
    READER$ = (org.apache.avro.io.DatumReader<CovidCaseWeekly>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
