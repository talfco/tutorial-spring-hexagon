/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.cloudburo.hexagon.demo.domain;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** record covers the data part of the overview tab */
@org.apache.avro.specific.AvroGenerated
public class Profile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7988701480005968721L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Profile\",\"namespace\":\"net.cloudburo.hexagon.demo.domain\",\"doc\":\"record covers the data part of the overview tab\",\"fields\":[{\"name\":\"businessActivities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Activity\",\"fields\":[{\"name\":\"descr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"textual natural language description - maximal 255 characters\"}]}}},{\"name\":\"coreCompetencies\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Competency\",\"fields\":[{\"name\":\"descr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"textual natural language description - maximal 255 characters\"}]}}},{\"name\":\"corporateObjectives\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Objective\",\"fields\":[{\"name\":\"string\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"textual natural language description - maximal 255 characters\"}]}}},{\"name\":\"sustainabilities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Sustainability\",\"fields\":[{\"name\":\"string\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"textual natural language description - maximal 255 characters\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Profile> ENCODER =
      new BinaryMessageEncoder<Profile>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Profile> DECODER =
      new BinaryMessageDecoder<Profile>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Profile> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Profile> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Profile>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Profile to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Profile from a ByteBuffer. */
  public static Profile fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.List<net.cloudburo.hexagon.demo.domain.Activity> businessActivities;
   private java.util.List<net.cloudburo.hexagon.demo.domain.Competency> coreCompetencies;
   private java.util.List<net.cloudburo.hexagon.demo.domain.Objective> corporateObjectives;
   private java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability> sustainabilities;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Profile() {}

  /**
   * All-args constructor.
   * @param businessActivities The new value for businessActivities
   * @param coreCompetencies The new value for coreCompetencies
   * @param corporateObjectives The new value for corporateObjectives
   * @param sustainabilities The new value for sustainabilities
   */
  public Profile(java.util.List<net.cloudburo.hexagon.demo.domain.Activity> businessActivities, java.util.List<net.cloudburo.hexagon.demo.domain.Competency> coreCompetencies, java.util.List<net.cloudburo.hexagon.demo.domain.Objective> corporateObjectives, java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability> sustainabilities) {
    this.businessActivities = businessActivities;
    this.coreCompetencies = coreCompetencies;
    this.corporateObjectives = corporateObjectives;
    this.sustainabilities = sustainabilities;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return businessActivities;
    case 1: return coreCompetencies;
    case 2: return corporateObjectives;
    case 3: return sustainabilities;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: businessActivities = (java.util.List<net.cloudburo.hexagon.demo.domain.Activity>)value$; break;
    case 1: coreCompetencies = (java.util.List<net.cloudburo.hexagon.demo.domain.Competency>)value$; break;
    case 2: corporateObjectives = (java.util.List<net.cloudburo.hexagon.demo.domain.Objective>)value$; break;
    case 3: sustainabilities = (java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'businessActivities' field.
   * @return The value of the 'businessActivities' field.
   */
  public java.util.List<net.cloudburo.hexagon.demo.domain.Activity> getBusinessActivities() {
    return businessActivities;
  }


  /**
   * Gets the value of the 'coreCompetencies' field.
   * @return The value of the 'coreCompetencies' field.
   */
  public java.util.List<net.cloudburo.hexagon.demo.domain.Competency> getCoreCompetencies() {
    return coreCompetencies;
  }


  /**
   * Gets the value of the 'corporateObjectives' field.
   * @return The value of the 'corporateObjectives' field.
   */
  public java.util.List<net.cloudburo.hexagon.demo.domain.Objective> getCorporateObjectives() {
    return corporateObjectives;
  }


  /**
   * Gets the value of the 'sustainabilities' field.
   * @return The value of the 'sustainabilities' field.
   */
  public java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability> getSustainabilities() {
    return sustainabilities;
  }


  /**
   * Creates a new Profile RecordBuilder.
   * @return A new Profile RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.Profile.Builder newBuilder() {
    return new net.cloudburo.hexagon.demo.domain.Profile.Builder();
  }

  /**
   * Creates a new Profile RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Profile RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.Profile.Builder newBuilder(net.cloudburo.hexagon.demo.domain.Profile.Builder other) {
    return new net.cloudburo.hexagon.demo.domain.Profile.Builder(other);
  }

  /**
   * Creates a new Profile RecordBuilder by copying an existing Profile instance.
   * @param other The existing instance to copy.
   * @return A new Profile RecordBuilder
   */
  public static net.cloudburo.hexagon.demo.domain.Profile.Builder newBuilder(net.cloudburo.hexagon.demo.domain.Profile other) {
    return new net.cloudburo.hexagon.demo.domain.Profile.Builder(other);
  }

  /**
   * RecordBuilder for Profile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Profile>
    implements org.apache.avro.data.RecordBuilder<Profile> {

    private java.util.List<net.cloudburo.hexagon.demo.domain.Activity> businessActivities;
    private java.util.List<net.cloudburo.hexagon.demo.domain.Competency> coreCompetencies;
    private java.util.List<net.cloudburo.hexagon.demo.domain.Objective> corporateObjectives;
    private java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability> sustainabilities;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.cloudburo.hexagon.demo.domain.Profile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.businessActivities)) {
        this.businessActivities = data().deepCopy(fields()[0].schema(), other.businessActivities);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.coreCompetencies)) {
        this.coreCompetencies = data().deepCopy(fields()[1].schema(), other.coreCompetencies);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.corporateObjectives)) {
        this.corporateObjectives = data().deepCopy(fields()[2].schema(), other.corporateObjectives);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sustainabilities)) {
        this.sustainabilities = data().deepCopy(fields()[3].schema(), other.sustainabilities);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Profile instance
     * @param other The existing instance to copy.
     */
    private Builder(net.cloudburo.hexagon.demo.domain.Profile other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.businessActivities)) {
        this.businessActivities = data().deepCopy(fields()[0].schema(), other.businessActivities);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.coreCompetencies)) {
        this.coreCompetencies = data().deepCopy(fields()[1].schema(), other.coreCompetencies);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.corporateObjectives)) {
        this.corporateObjectives = data().deepCopy(fields()[2].schema(), other.corporateObjectives);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sustainabilities)) {
        this.sustainabilities = data().deepCopy(fields()[3].schema(), other.sustainabilities);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'businessActivities' field.
      * @return The value.
      */
    public java.util.List<net.cloudburo.hexagon.demo.domain.Activity> getBusinessActivities() {
      return businessActivities;
    }

    /**
      * Sets the value of the 'businessActivities' field.
      * @param value The value of 'businessActivities'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder setBusinessActivities(java.util.List<net.cloudburo.hexagon.demo.domain.Activity> value) {
      validate(fields()[0], value);
      this.businessActivities = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'businessActivities' field has been set.
      * @return True if the 'businessActivities' field has been set, false otherwise.
      */
    public boolean hasBusinessActivities() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'businessActivities' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder clearBusinessActivities() {
      businessActivities = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'coreCompetencies' field.
      * @return The value.
      */
    public java.util.List<net.cloudburo.hexagon.demo.domain.Competency> getCoreCompetencies() {
      return coreCompetencies;
    }

    /**
      * Sets the value of the 'coreCompetencies' field.
      * @param value The value of 'coreCompetencies'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder setCoreCompetencies(java.util.List<net.cloudburo.hexagon.demo.domain.Competency> value) {
      validate(fields()[1], value);
      this.coreCompetencies = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'coreCompetencies' field has been set.
      * @return True if the 'coreCompetencies' field has been set, false otherwise.
      */
    public boolean hasCoreCompetencies() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'coreCompetencies' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder clearCoreCompetencies() {
      coreCompetencies = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'corporateObjectives' field.
      * @return The value.
      */
    public java.util.List<net.cloudburo.hexagon.demo.domain.Objective> getCorporateObjectives() {
      return corporateObjectives;
    }

    /**
      * Sets the value of the 'corporateObjectives' field.
      * @param value The value of 'corporateObjectives'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder setCorporateObjectives(java.util.List<net.cloudburo.hexagon.demo.domain.Objective> value) {
      validate(fields()[2], value);
      this.corporateObjectives = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'corporateObjectives' field has been set.
      * @return True if the 'corporateObjectives' field has been set, false otherwise.
      */
    public boolean hasCorporateObjectives() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'corporateObjectives' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder clearCorporateObjectives() {
      corporateObjectives = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'sustainabilities' field.
      * @return The value.
      */
    public java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability> getSustainabilities() {
      return sustainabilities;
    }

    /**
      * Sets the value of the 'sustainabilities' field.
      * @param value The value of 'sustainabilities'.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder setSustainabilities(java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability> value) {
      validate(fields()[3], value);
      this.sustainabilities = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'sustainabilities' field has been set.
      * @return True if the 'sustainabilities' field has been set, false otherwise.
      */
    public boolean hasSustainabilities() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'sustainabilities' field.
      * @return This builder.
      */
    public net.cloudburo.hexagon.demo.domain.Profile.Builder clearSustainabilities() {
      sustainabilities = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Profile build() {
      try {
        Profile record = new Profile();
        record.businessActivities = fieldSetFlags()[0] ? this.businessActivities : (java.util.List<net.cloudburo.hexagon.demo.domain.Activity>) defaultValue(fields()[0]);
        record.coreCompetencies = fieldSetFlags()[1] ? this.coreCompetencies : (java.util.List<net.cloudburo.hexagon.demo.domain.Competency>) defaultValue(fields()[1]);
        record.corporateObjectives = fieldSetFlags()[2] ? this.corporateObjectives : (java.util.List<net.cloudburo.hexagon.demo.domain.Objective>) defaultValue(fields()[2]);
        record.sustainabilities = fieldSetFlags()[3] ? this.sustainabilities : (java.util.List<net.cloudburo.hexagon.demo.domain.Sustainability>) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Profile>
    WRITER$ = (org.apache.avro.io.DatumWriter<Profile>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Profile>
    READER$ = (org.apache.avro.io.DatumReader<Profile>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
